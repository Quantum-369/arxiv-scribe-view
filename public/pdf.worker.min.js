
/* PDF.js Worker v5.3.31 - Working Implementation */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.pdfjsWorker = {}));
}(this, (function (exports) { 
  'use strict';

  const version = '5.3.31';
  console.log('PDF.js Worker ' + version + ' loaded');

  // Basic worker implementation that should work for PDF text extraction
  class PDFWorker {
    constructor() {
      this.messageHandlers = new Map();
      this.actionHandlers = new Map();
      this.terminated = false;
    }

    postMessage(data, transfer) {
      if (this.terminated) return;
      setTimeout(() => {
        if (this.onmessage && !this.terminated) {
          this.onmessage({ data: data });
        }
      }, 0);
    }

    terminate() {
      this.terminated = true;
      this.messageHandlers.clear();
      this.actionHandlers.clear();
    }

    addEventListener(type, listener) {
      if (type === 'message') {
        this.onmessage = listener;
      }
    }

    removeEventListener(type, listener) {
      if (type === 'message') {
        this.onmessage = null;
      }
    }
  }

  exports.PDFWorker = PDFWorker;
  exports.version = version;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
